apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-forecast-api
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: weather-forecast-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: weather-forecast-api
    spec:
      containers:
      - name: weather-forecast-api
        envFrom:
        - secretRef:
            name: weather-forecast-api-secret
        image: arnobdev/weather_forecast_api:main-b777b1d
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: port
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: port
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: port
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 80m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 50Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: weather-forecast-api-svc
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: port
  selector:
    app: weather-forecast-api
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: weather-forecast-api-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: weather.arn-ob.xyz
    http:
      paths:
      - backend:
          service:
            name: weather-forecast-api-svc
            port:
              number: 80
        path: /weather-forecast-api
        pathType: Prefix
---
apiVersion: v1
data:
  PORT: MzAwMA==
  WEATHER_API_KEY: YzczYTgzNzUzY2ZmNGZlMDk2ZjE3MTE1NTI1MDYwNg==
  WEATHER_API_URL: aHR0cDovL2FwaS53ZWF0aGVyYXBpLmNvbS92MS9jdXJyZW50Lmpzb24=
kind: Secret
metadata:
  name: weather-forecast-api-secret
  namespace: default
type: Opaque
